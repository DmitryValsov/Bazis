@model Bazis.Models.Order





 <style>

        .page {
            display: none;
            padding: 5px;
        }

        .page.active {
            display: block;
        }

      

    </style>
    <!-- Выбор сервиса -->






<div id="page1" class="page active">
        <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css"/>
  <style>
    :root {
      --clr-bg-dark: #1F1F2F;
      --clr-bg-light: #FFFFFF;
      --clr-primary-start: #1943a6;
      --clr-primary-end: #0A254D;
      --clr-text-white: #fff;
      --clr-text-dark: #111827;
      --clr-border: #E5E7EB;
      --r-sm: 14px;
      --r-lg: 22px;
      --nav-height: 66px;
      --icon-size: 30px;
      --nav-bg: rgba(28,40,76,0.86);
      --menu-max: 520px;
      --gap-md: 16px;
      --gap-lg: 28px;
      --shadow-light: 0 4px 16px rgba(28,40,76,0.09);
      --ff: 'Inter', sans-serif;
    }
    *, *::before, *::after { box-sizing: border-box; margin:0; padding:0 }
    html, body { height:100%; }
    body {
      display:flex; flex-direction:column; min-height:100vh;
      font-family:var(--ff); background:var(--clr-bg-light); color:var(--clr-text-dark);
      padding-bottom:calc(var(--nav-height) + env(safe-area-inset-bottom,0px));
      -webkit-tap-highlight-color: transparent;
    }

    /* ===== Шапка ===== */
    .hero {
      padding: env(safe-area-inset-top) var(--gap-lg) var(--gap-lg);
      background: linear-gradient(120deg, var(--clr-primary-start) 55%, var(--clr-primary-end));
      border-bottom-left-radius: var(--r-lg);
      border-bottom-right-radius: var(--r-lg);
      color: var(--clr-text-white);
      box-shadow: 0 8px 36px rgba(48,67,127,0.11);
      transition: transform .3s;
      z-index: 10;
    }
    .hero.hidden { transform: translateY(-100%) }
    .hero__header { display:flex; align-items:center; gap:var(--gap-md) }
    .hero__logo {
      width:34px; height:34px;
      background: linear-gradient(135deg, var(--clr-primary-start), var(--clr-primary-end));
      border-radius: var(--r-sm);
    }
    .hero__title { font-size:20px; font-weight:600 }
    .hero__main {
      margin-top:4px; font-size:28px; font-weight:700;
    }

    /* ===== Контент ===== */
    main {
      flex:1; overflow-y:auto;
      padding: 0 var(--gap-lg);
    }

    /* ===== Карта ===== */
    #map {
      width:100%; height:336px;
      margin: var(--gap-lg) 0;
      border-radius: var(--r-sm);
      box-shadow: var(--shadow-light);
    }

    /* ===== Список сервисов ===== */
    .service-list {
      display:flex;
      flex-direction:column;
      gap: var(--gap-md);
    }
    .service-item {
      padding: 10px;
      display:flex;
      justify-content: space-between;
      align-items: flex-start;
      padding: var(--gap-md) 0;
      border-bottom: 1px solid var(--clr-border);
      transition: background-color .2s, border-left .2s, padding-left .2s;
      cursor: pointer;
    }
    .service-item.selected {
      background-color: rgba(25,67,166,0.1);
      border-left: 4px solid var(--clr-primary-start);
      padding-left: calc(var(--gap-md) - 4px);
    }
    .service-item__info {
      flex:1;
      padding-right: var(--gap-md);
    }
    .service-item__title {
      font-size:18px; font-weight:600;
      margin-bottom:4px;
    }
    .service-item__meta {
      font-size:14px; line-height:1.4;
    }
    .service-item__meta .status {
      color: #16A34A; font-weight:600;
    }
    .service-item__img {
      width:80px; height:80px;
      border-radius: var(--r-sm);
      object-fit: cover;
      box-shadow: var(--shadow-light);
    }

    /* ===== Кнопка «Далее» ===== */
    .btn-next {
      position: fixed;
      left: 50%;
      bottom: calc(var(--nav-height) + env(safe-area-inset-bottom,0px) + var(--gap-md));
      transform: translateX(-50%);
      padding: 14px 32px;
      font-size:16px; font-weight:700;
      color:#fff;
      background: linear-gradient(90deg, var(--clr-primary-start), var(--clr-primary-end));
      border:none; border-radius: var(--r-sm);
      box-shadow: 0 2px 10px rgba(25,67,166,0.1);
      cursor: pointer;
      z-index: 5;
    }
    .btn-next:disabled {
      opacity:.5;
      cursor:not-allowed;
    }


    /* ===== Адаптив ===== */
   
  </style>


  <!-- Шапка -->
  <header class="hero">
    <div class="hero__header">
      <div class="hero__logo"></div>
      <div class="hero__title">Базис Моторс</div>
    </div>
    <div class="hero__main">Выбор сервисного центра</div>
  </header>

  <main id="scroller" style="min-height: 100%;">
    <h2>Где вам удобнее?</h2>
    <div id="map">

  <iframe style="border-radius: 10px;" src="https://yandex.ru/map-widget/v1/?um=constructor%3A7bef223a4f32160bcbd68b79316f0e375244f02f71ec888c93ae6545d09e9d2c&amp;source=constructor" width="350" height="336" frameborder="0"></iframe>
    </div>

    <h2>Найдены сервисы</h2>
    <div class="service-list">

      <div class="service-item service-card" style="padding: 10px;" data-service="11 км Окружной дороги,6" data-lat="57.1445" data-lng="65.5340">
        <div class="service-item__info">
          <div class="service-item__title">Базис-сервис - 11 км Окружной дороги,6</div>
          <div class="service-item__meta">
            4,9 ★★★★★ (160) · Автосалон<br/>
            Тюмень, Россия · <a href="tel:+73452394696">+7 (3452) 39‒46‒96</a><br/>
            <span class="status">Открыто</span> · Закроется в 20:00
          </div>
        </div>
        <div>
       <iframe style="border-radius: 10px; padding-top:10px;" src="https://yandex.ru/map-widget/v1/?um=constructor%3A0b09699e6ae64e2bacd736a0986ec38140255a8172bc8d73be64747deeb13a8e&amp;source=constructor" width="360" height="300" frameborder="0"></iframe>
        </div>
      </div>


      <div class="service-item service-card" style="padding: 10px;" data-service="Федюнинского,83" data-lat="57.1445" data-lng="65.5340">
     
        <div class="service-item__info">
          <div class="service-item__title">Базис-сервис - Федюнинского,83</div>
          <div class="service-item__meta">
            4,9 ★★★★★ (140) · Автосалон<br/>
            Тюмень, Россия · <a href="tel:+73452579151">+7 (3452) 57‒91‒51</a><br/>
            <span class="status">Открыто</span> · Закроется в 20:00
          </div>
        </div>
        <div>
      <iframe style="border-radius: 10px; padding-top:10px;" src="https://yandex.ru/map-widget/v1/?um=constructor%3Abcf7defa0dcbfbf539d0a61cad5517f5aa58b1fcc3a3b6e96fb28a5cd762caef&amp;source=constructor" width="360" height="300" frameborder="0"></iframe>
        </div>
    
      </div>

<div class="service-item service-card" style="padding: 10px;" data-service="Пермякова, 19" data-lat="57.1445" data-lng="65.5340">
        <div class="service-item__info">
          <div class="service-item__title">Базис-сервис - Пермякова, 19</div>
          <div class="service-item__meta">
            4,9 ★★★★★ (179) · Автосалон<br/>
            Тюмень, Россия · <a href="tel:+73452579838">+73452579838</a><br/>
            <span class="status">Открыто</span> · Закроется в 20:00
          </div>
        </div>
        <div>
       <iframe style="border-radius: 10px; padding-top:10px;" src="https://yandex.ru/map-widget/v1/?um=constructor%3Adb9f3b345718bfe4c916a87f1c5ed0d50d2e245fbc63cfddce6a657d18cefa03&amp;source=constructor" width="360" height="300" frameborder="0"></iframe>
        </div>
      
      </div>
      <div class="service-item service-card" style="padding: 10px;" data-service="Окружная дорога, 202" data-lat="57.1445" data-lng="65.5340">
        <div class="service-item__info">
          <div class="service-item__title">Базис-сервис - Окружная дорога, 202</div>
          <div class="service-item__meta">
            4,8 ★★★★★ (67) · Автосалон<br/>
            Тюмень, Россия · <a href="tel:73452564435">+7 (3452) 56‒44‒35</a><br/>
            <span class="status">Открыто</span> · Закроется в 20:00
          </div>
        </div>
        <div>
      <iframe style="border-radius: 10px; padding-top:10px;" src="https://yandex.ru/map-widget/v1/?um=constructor%3A61c7ac36d25b59a3608c09c7f71af23b20e7b36c6abd0da7c291b29e78f196c3&amp;source=constructor" width="360" height="300" frameborder="0"></iframe> 
        </div>
      
      </div>
      

     

     

      
      


    </div>
  </main>

  <button class="btn-next button" id="toPage1-5" disabled>Далее</button>

  
  <!-- Leaflet JS -->
  <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
  <script>
    // Инициализация карты
    //const map = L.map('map').setView([57.1522,65.5272],12);
    //L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
    //  attribution: '&copy; OpenStreetMap contributors'
    //}).addTo(map);

   
    // Добавляем маркеры
    document.querySelectorAll('.service-item').forEach(item => {
      const lat = +item.dataset.lat;
      const lng = +item.dataset.lng;
      L.marker([lat, lng]).addTo(map).bindPopup(item.dataset.value || item.querySelector('.service-item__title').innerText);
    });

    // Логика выбора и подсветки
   /* const items = document.querySelectorAll('.service-item');
    const nextBtn = document.getElementById('toPage1-5');
    items.forEach(item => {
      item.addEventListener('click', () => {
        items.forEach(i => i.classList.remove('selected'));
        item.classList.add('selected');
        nextBtn.disabled = false;
        map.flyTo([+item.dataset.lat, +item.dataset.lng], 15);
      });
    });*/

    // Скрываем/показываем шапку и футер при прокрутке
    const scroller = document.getElementById('scroller');
    const hero = document.querySelector('.hero');
    const footer = document.querySelector('.nav-hero');
    let lastY = 0;
    scroller.addEventListener('scroll', () => {
      const y = scroller.scrollTop;
      hero.classList.toggle('hidden', y > lastY);
      footer.classList.toggle('hidden', y > lastY);
      lastY = y;
    });
  </script>
    </div>

    <div id="page1-5" class="page">
        <style>
    :root {
      --clr-bg-dark:       #1F1F2F;
      --clr-bg-light:      #fff;
      --clr-primary-start: #1943a6;
      --clr-primary-end:   #0A254D;
      --clr-text-white:    #fff;
      --clr-text-dark:     #111827;
      --clr-text-gray:     #6B7280;
      --r-sm:              14px;
      --r-lg:              22px;
      --nav-height:        66px;
      --icon-size:         30px;
      --nav-bg:            rgba(28,40,76,0.86);
      --menu-max:          520px;
      --gap-xs:            4px;
      --gap-sm:            8px;
      --gap-md:            16px;
      --gap-lg:            28px;
      --shadow-light:      0 4px 16px rgba(28,40,76,0.09);
      --ff:                'Inter', sans-serif;
    }
    
    /* ===== Градиентная шапка ===== */
    .hero {
      width: 100%;
      margin: 0 auto 28px auto;
      padding: env(safe-area-inset-top) max(18px, 4vw) 32px;
      background: linear-gradient(120deg, var(--clr-primary-start) 55%, var(--clr-primary-end));
      border-bottom-left-radius: var(--r-lg);
      border-bottom-right-radius: var(--r-lg);
      position: relative;
      overflow: hidden;
      box-shadow: 0 8px 36px 0 rgba(48,67,127,0.11);
      z-index: 20;
      min-height: 124px;
      display: flex; flex-direction: column; justify-content: flex-end;
    }
    .hero::before, .hero::after {
      content: '';
      position: absolute;
      border-radius: 50%;
      opacity: .19;
      pointer-events: none;
    }
    .hero::before {
      width: 360px; height: 360px; left: -160px; top: -160px;
      border: 3px solid #fff2;
      opacity: .13;
    }
    .hero::after {
      width: 210px; height: 210px; right: -60px; top: -80px;
      border: 8px solid #fff1;
      opacity: .09;
    }
    .hero__header {
      display:flex; align-items:center; gap:var(--gap-sm);
    }
    .hero__logo {
      width:34px; height:34px;
      background: linear-gradient(135deg, var(--clr-primary-start), var(--clr-primary-end));
      border-radius:var(--r-sm);
      box-shadow: 0 2px 10px #193d7422;
    }
    .hero__title {
      font-size:20px; font-weight:600;
      color: var(--clr-text-white);
      letter-spacing: .02em;
      text-shadow: 0 2px 8px #0001;
    }
    .hero__main {
      margin-top: var(--gap-xs);
      font-size:29px; font-weight:700; line-height:1.19;
      color: var(--clr-text-white);
      text-shadow: 0 4px 16px rgba(40,48,110,0.09);
    }

    /* ===== Контент ===== */
    main {
      flex: 1;
      overflow-y: auto;
      padding: var(--gap-lg) max(18px, 4vw) var(--gap-lg);
    }
    h2 {
      font-size: 23px; font-weight: 600;
      text-align: center; margin-bottom: var(--gap-lg);
      position: relative;
      color: var(--clr-bg-dark);
      letter-spacing: .02em;
    }
    h2::after {
      content: ''; width: 48px; height: 4px;
      background: var(--clr-primary-start);
      position: absolute; bottom: -10px; left: 50%;
      transform: translateX(-50%); border-radius: 2px;
    }

    /* ===== Карточки услуги ===== */
    .service-list {
      display: grid;
      gap: var(--gap-lg);
      grid-template-columns: repeat(auto-fit, minmax(285px, 1fr));
    }
    .service-card {
      position: relative;
      background: #fff;
      border-radius: var(--r-sm);
      overflow: hidden;
      box-shadow: var(--shadow-light);
      transition: transform .22s, box-shadow .2s, border .2s;
      cursor: pointer;
      border: 2px solid transparent;
      min-height: 180px;
      display: flex; flex-direction: column;
      outline: none;
    }
    .service-card:hover,
    .service-card:focus-visible {
      transform: translateY(-7px) scale(1.01);
      box-shadow: 0 10px 32px rgba(28,40,76,0.13);
      border-color: var(--clr-primary-start);
    }
    .service-card.selected {
      border-color: var(--clr-primary-end);
      box-shadow: 0 0 0 3px #e0e7ff;
    }
    .service-card__img-wrapper {
      position: relative;
      width: 100%; height: 0; padding-top: 55%;
      overflow: hidden;
      background: #f2f4fa;
    }
    .service-card__img {
      position: absolute; top: 0; left: 0;
      width: 100%; height: 100%;
      object-fit: cover;
      transition: transform .38s;
      z-index: 2;
    }
    .service-card:hover .service-card__img,
    .service-card:focus-visible .service-card__img {
      transform: scale(1.045) rotate(-0.7deg);
    }
    .service-card__gradient {
      position: absolute; bottom: 0; left: 0; right: 0;
      height: 55%;
      background: linear-gradient(to top, rgba(31,31,47,0.41), transparent);
      z-index: 3;
      pointer-events: none;
    }
    .service-card__info {
      position: absolute; bottom: var(--gap-sm); left: var(--gap-sm); right: var(--gap-sm);
      color: #fff; text-shadow: 0 2px 8px rgba(0,0,0,0.14);
      z-index: 4;
    }
    .service-card__title {
      font-size: 18px; font-weight: 700; margin-bottom: var(--gap-xs);
      letter-spacing: .01em;
      line-height: 1.17;
    }
    .service-card__desc {
      font-size: 14px; color: rgba(255,255,255,0.87);
      max-width: 82%; line-height: 1.3;
      letter-spacing: .01em;
    }

    /* ===== Кнопка Далее (фиксированная) ===== */
    .btn-next {
      display: block;
      position: fixed;
      left: 50%;
      bottom: calc(var(--nav-height) + 19px + env(safe-area-inset-bottom));
      transform: translateX(-50%);
      z-index: 40;
      width: calc(100% - 2 * var(--gap-md));
      max-width: 330px;
      padding: 15px 0;
      font-size: 17px; font-weight: 700;
      text-align: center; color: #fff;
      background: linear-gradient(90deg, var(--clr-primary-start), var(--clr-primary-end));
      border-radius: var(--r-sm);
      box-shadow: 0 2px 10px #1943a60a;
      transition: opacity .18s, box-shadow .18s, transform .13s;
      border: none;
      letter-spacing: .03em;
    }
    .btn-next:disabled {
      opacity: .54; cursor: not-allowed;
    }
    .btn-next:not(:disabled):active {
      transform: scale(.98);
      box-shadow: none;
    }
  </style>

  <!-- Градиентная шапка -->
  <header class="hero" id="hero">
    <div class="hero__header">
      <div class="hero__logo"></div>
      <div class="hero__title">Базис Моторс</div>
    </div>
    <div class="hero__main">Выбор услуги</div>
  </header>

  <main style="min-height: 100%;">
    <h2>Выберите услугу</h2>
    <div class="service-list" id="serviceList">
      <div class="service-card" tabindex="0" data-service="Техобслуживание">
        <div class="service-card__img-wrapper">
          <img class="service-card__img" src="~/images/tehobsl.jpg" alt="Техобслуживание">
          <div class="service-card__gradient"></div>
        </div>
        <div class="service-card__info">
          <div class="service-card__title">Техобслуживание</div>
          <div class="service-card__desc">Регулярное ТО и замена расходников</div>
        </div>
      </div>
      <div class="service-card" tabindex="0" data-service="Шиномонтаж">
        <div class="service-card__img-wrapper">
          <img class="service-card__img" src="~/images/shin.webp" alt="Шиномонтаж">
          <div class="service-card__gradient"></div>
        </div>
        <div class="service-card__info">
          <div class="service-card__title">Шиномонтаж</div>
          <div class="service-card__desc">Балансировка и сезонная замена колёс</div>
        </div>
      </div>
      <div class="service-card" tabindex="0" data-service="Диагностика">
        <div class="service-card__img-wrapper">
          <img class="service-card__img" src="~/images/diagnos.jpg" alt="Диагностика">
          <div class="service-card__gradient"></div>
        </div>
        <div class="service-card__info">
          <div class="service-card__title">Диагностика</div>
          <div class="service-card__desc">Полная проверка всех систем авто</div>
        </div>
      </div>
      <div class="service-card" tabindex="0" data-service="Ремонт">
        <div class="service-card__img-wrapper">
          <img class="service-card__img" src="~/images/remont.webp" alt="Ремонт">
          <div class="service-card__gradient"></div>
        </div>
        <div class="service-card__info">
          <div class="service-card__title">Ремонт</div>
          <div class="service-card__desc">Своевременный ремонт любых неисправностей</div>
        </div>
      </div>
    </div>
    <button class="btn-next" id="toPage2" disabled>Далее</button>
  </main>


  <script>
    const cards = document.querySelectorAll('.service-card');
    const nextBtn = document.getElementById('nextBtn');
    let selectedService = null;
    cards.forEach(card => {
      card.addEventListener('click', () => {
        cards.forEach(c => c.classList.remove('selected'));
        card.classList.add('selected');
        selectedService = card.dataset.value;
        nextBtn.disabled = false;
      });
      card.addEventListener('keypress', e => {
        if (e.key === " " || e.key === "Enter") card.click();
      });
    });
    nextBtn.addEventListener('click', () => {
      console.log('Выбрана услуга:', selectedService);
      // window.location.href = ...
    });
  </script>

    </div>


    <!-- Выбор автомобиля -->
    <div id="page2" class="page">
  <style>
    :root {
      --clr-bg-dark: #1F1F2F;
      --clr-bg-light: #FFFFFF;
      --clr-primary-start: #1943a6;
      --clr-primary-end:   #0A254D;
      --clr-text-white: #fff;
      --clr-text-dark: #111827;
      --clr-text-gray: #6B7280;
      --r-sm: 14px;
      --r-lg: 22px;
      --nav-height: 66px;
      --icon-size: 30px;
      --nav-bg: rgba(28,40,76,0.86);
      --menu-max: 520px;
      --gap-xs: 4px;
      --gap-sm: 8px;
      --gap-md: 16px;
      --gap-lg: 24px;
      --shadow-light: 0 4px 16px rgba(28,40,76,0.09);
      --ff: 'Inter', sans-serif;
    }
   

    /* ======= Градиентная шапка ======= */
    .hero {
      width: 100%;
      margin: 0 auto 24px auto;
      padding: env(safe-area-inset-top) max(18px, 4vw) var(--gap-lg);
      background: linear-gradient(120deg, var(--clr-primary-start) 55%, var(--clr-primary-end));
      border-bottom-left-radius: var(--r-lg);
      border-bottom-right-radius: var(--r-lg);
      position: relative;
      overflow: hidden;
      box-shadow: 0 8px 36px 0 rgba(48,67,127,0.11);
      z-index: 20;
      min-height: 136px;
      display: flex;
      flex-direction: column;
      justify-content: flex-end;
    }
    .hero::before, .hero::after {
      content: '';
      position: absolute;
      border-radius: 50%;
      opacity: .18;
      pointer-events: none;
    }
    .hero::before {
      width: 340px; height: 340px; left: -150px; top: -150px;
      border: 3px solid #fff3;
    }
    .hero::after {
      width: 220px; height: 220px; right: -80px; top: -80px;
      border: 8px solid #fff1;
      opacity: .13;
    }
    .hero__header {
      display:flex; align-items:center; gap:var(--gap-sm);
    }
    .hero__logo {
      width:34px; height:34px;
      background: linear-gradient(135deg, var(--clr-primary-start), var(--clr-primary-end));
      border-radius:var(--r-sm);
    }
    .hero__title {
      font-size:19px; font-weight:600;
      color: var(--clr-text-white);
      letter-spacing: .03em;
    }
    .hero__main-title {
      margin-top: var(--gap-xs);
      font-size:28px; font-weight:700; line-height:1.2;
      color: var(--clr-text-white);
      text-shadow: 0 4px 16px rgba(40,48,110,0.06);
    }

    /* ======= Контент ======= */
    main {
      flex:1;
      overflow-y:auto;
      padding:var(--gap-md) max(18px, 4vw);
    }
    h2 {
      font-size:23px; font-weight:600;
      text-align:center; margin-bottom:var(--gap-lg);
      position:relative;
      color: var(--clr-bg-dark);
      letter-spacing: .02em;
    }
    h2::after {
      content:'';
      width:48px; height:4px;
      background: var(--clr-primary-start);
      position:absolute; bottom:-10px; left:50%;
      transform:translateX(-50%);
      border-radius:2px;
    }

    /* ======= Карточки авто ======= */
    .car-list {
      display: grid;
      gap: var(--gap-md);
      grid-template-columns: repeat(auto-fit, minmax(270px, 1fr));
    }
    .car-card {
      position: relative;
      background: #fff;
      border-radius: var(--r-sm);
      overflow: hidden;
      box-shadow: var(--shadow-light);
      transition: transform .22s, box-shadow .2s;
      cursor:pointer;
      min-height: 170px;
      border: 2px solid transparent;
    }
    .car-card:hover {
      transform: translateY(-5px) scale(1.01);
      box-shadow: 0 8px 28px rgba(28,40,76,0.14);
      border-color: var(--clr-primary-start);
    }
    .car-card.selected {
      outline: 3px solid var(--clr-primary-end);
      border-color: var(--clr-primary-end);
      box-shadow: 0 0 0 3px #e0e7ff;
    }
    .car-card__img-wrapper {
      position: relative;
      overflow: hidden;
      height: 0;
      padding-top: 56.25%;
    }
    .car-card__img {
      position: absolute;
      top:0; left:0; width:100%; height:100%;
      object-fit:cover;
      transition: transform .37s;
      border-radius: 0 0 var(--r-sm) var(--r-sm);
    }
    .car-card:hover .car-card__img {
      transform: scale(1.04) rotate(-0.5deg);
    }
    .car-card__gradient {
      position: absolute;
      bottom:0; left:0; right:0;
      height:52%;
      background: linear-gradient(to top, rgba(31,31,47,0.46), transparent);
      pointer-events:none;
    }
    .car-card__info {
      position: absolute;
      bottom: var(--gap-sm); left: var(--gap-sm); right: var(--gap-sm);
      color: #fff;
      text-shadow: 0 2px 8px rgba(0,0,0,0.17);
    }
    .car-card__model {
      font-size:17px; font-weight:700;
      letter-spacing: .01em;
    }
    .car-card__meta {
      font-size:14px; color: rgba(255,255,255,0.81);
      margin-top:3px;
      letter-spacing: .02em;
    }

    /* ======= Кнопка Далее ======= */
    .btn-next {
      display:block;
      margin: var(--gap-lg) auto  var(--gap-md);
      padding: 14px 0;
      width: 100%; max-width:330px;
      font-size:16px; font-weight:700;
      text-align:center;
      letter-spacing: .04em;
      color:#fff;
      background: linear-gradient(90deg, var(--clr-primary-start), var(--clr-primary-end));
      border:none; border-radius:var(--r-sm);
      box-shadow: 0 2px 10px #1943a60c;
      transition:opacity .18s, box-shadow .18s, transform .13s;
    }
    .btn-next:disabled {
      opacity:.52; cursor:not-allowed;
    }
    .btn-next:not(:disabled):active {
      transform: scale(.98);
      box-shadow: none;
    }

    /* ======= Нижнее меню ======= */
    .nav-hero {
      position: fixed;
      left: 50%; bottom: calc(0px + env(safe-area-inset-bottom, 0px) + 8px);
      transform: translateX(-50%);
      width: 98vw; max-width: var(--menu-max); min-width: 120px;
      height: var(--nav-height);
      background: var(--nav-bg);
      backdrop-filter: blur(10px) saturate(140%);
      display: flex; justify-content: space-around; align-items: center;
      border-radius: var(--r-lg);
      box-shadow: 0 -6px 32px 0 rgba(28,40,76,0.13), 0 0.5px 0 rgba(255,255,255,0.10);
      z-index: 999;
      border: 1.5px solid #2227;
      padding: 0 6px;
    }
    .nav-hero a {
      position:relative; z-index:1;
      text-decoration:none;
      color:rgba(255,255,255,0.82);
      display:flex; flex-direction:column; align-items:center;
      font-size:12px; font-weight:500;
      letter-spacing: 0.01em;
      transition: color .16s, font-weight .11s, transform .13s;
      user-select: none;
      will-change: transform;
      padding: 0 2px;
      flex: 1;
      min-width: 0;
    }
    .nav-hero a.active {
      color: #fff;
      font-weight: 700;
      transform: scale(1.08);
      text-shadow: 0 2px 12px #fff2;
    }
    .nav-hero svg {
      width: var(--icon-size);
      height: var(--icon-size);
      min-width: var(--icon-size);
      min-height: var(--icon-size);
      max-width: var(--icon-size);
      max-height: var(--icon-size);
      fill: none;
      stroke: currentColor;
      stroke-width: 2;
      stroke-linecap: round;
      stroke-linejoin: round;
      margin-bottom: 1px;
      display: block;
      filter: drop-shadow(0 1px 4px #1f2d4e0a);
    }
    .nav-hero a.active svg { stroke: #fff; filter: drop-shadow(0 0 9px #1943a646);}
    .nav-hero span {
      font-family: inherit;
      letter-spacing: .01em;
      font-size: 12px;
      margin-top: 0.09em;
      text-shadow: 0 1px 5px #0001;
      pointer-events: none;
      user-select: none;
      line-height: 1.1;
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
    }


  </style>


  <!-- Градиентная шапка -->
  <div class="hero" id="hero">
    <div class="hero__header">
      <div class="hero__logo"></div>
      <div class="hero__title">Базис Моторс</div>
    </div>
    <div class="hero__main-title">Мои автомобили</div>
  </div>

  <main style="min-height: 100%;">
    <h2>Выберите автомобиль</h2>
    <div class="car-list" id="carList">
       @foreach(Car car in ViewBag.UsersCars)
      { 
      <div class="car-card" data-vin="1234567890ABCDEFG" data-itemid="@Html.DisplayFor(modelItem => car.Id)" data-service="@Html.DisplayFor(modelItem => car.Brand) - @Html.DisplayFor(modelItem => car.Model)">
        <div class="car-card__img-wrapper">
           @if (!string.IsNullOrEmpty(car.Img))
         {
          <img class="car-card__img" src="~/images/@car.Img" alt="Chery Tiggo 8 Pro" class="car-item__img">
          }
          else
          {
          <img class="car-card__img" src="https://via.placeholder.com/800x450?text=Tiggo+8+Pro" alt="Chery Tiggo 8 Pro">
          }
          <div class="car-card__gradient"></div>
        </div>
        <div class="car-card__info">
          <div class="car-card__model">@Html.DisplayFor(modelItem => car.Brand) - @Html.DisplayFor(modelItem => car.Model)</div>
          <div class="car-card__meta">VIN @Html.DisplayFor(modelItem => car.VIN) · @Html.DisplayFor(modelItem => car.GosNomer)</div>
        </div>
      </div>
      }
    </div>
    <button class="btn-next" id="toPage3" disabled>Далее</button>
  </main>

  <!-- Нижнее фирменное меню -->
 
  <script>
    const cardsAuto = document.querySelectorAll('.car-card');
    const nextBtnAuto = document.getElementById('nextBtn');
    let selectedVin = null;
    cardsAuto.forEach(cardAuto => {
      cardAuto.addEventListener('click', () => {
        cardsAuto.forEach(c => c.classList.remove('selected'));
        cardAuto.classList.add('selected');
        selectedVin = cardAuto.dataset.vin;
        nextBtnAuto.disabled = false;
      });
    });
    nextBtnAuto.addEventListener('click', () => {
      console.log('Выбран VIN:', selectedVin);
      // переход на следующий шаг
    });
  </script>
    </div>

    <!--Выбор услуги-->



    <!--/Выбор услуги-->

    <!-- Выбор даты и времени -->
    <div id="page3" class="page">
        <style>
            * { box-sizing: border-box; margin: 0; padding: 0; }
            body { font-family: Arial, sans-serif; background: #f7f8fa; color: #0f1944; }
            .phone { width: 375px; margin: 20px auto; border: 16px solid #333; border-radius: 36px; position: relative; }
            .screen { background: #fff; border-radius: 20px; padding: 16px; width: 100%; position: relative; }

            /* Header */
            .header { display: flex; align-items: center; margin-bottom: 16px; }
            .back { background: none; border: none; cursor: pointer; padding: 4px; margin-right: 8px; }
            .back svg { display: block; }
            .logo { width: 32px; height: 32px; margin-right: 8px; }
            .title-block { display: flex; flex-direction: column; }
            .title-block .title { font-size: 13px; font-weight: 600; line-height: 1.2; }
            .title-block .subtitle { font-size: 9px; color: #6b7280; margin-top: 2px; }

            h1 { font-size: 20px; font-weight: 600; text-align: center; margin-bottom: 16px; }

            /* Calendar */
            .calendar { background: #fff; border-radius: 12px; padding: 12px; }
            .month { display: flex; justify-content: space-between; align-items: center; margin-bottom: 8px; }
            .month button { background: none; border: none; cursor: pointer; padding: 4px; font-size: 20px; line-height: 1; }
            .month-label { display: flex; flex-direction: column; align-items: center; }
            .month-name { font-size: 18px; font-weight: 600; }
            .year-name { font-size: 14px; color: #6b7280; margin-top: 2px; }
            .weekdays, .days { display: grid; grid-template-columns: repeat(7, 1fr); }
            .weekdays div { padding: 6px; font-size: 14px; color: #9ca3af; text-align: center; }
            .days div { padding: 6px; font-size: 14px; text-align: center; margin-bottom: 4px; border-radius: 50%; }
            .days div.blank { visibility: hidden; }
            .days div.past { color: #9ca3af; }
            .days div.no-slots { color: #000; }
            .days div.available { color: #0f1944; cursor: pointer; }
            .days div.selected { background: #0f1944; color: #fff; }

            /* Timeslots */
            .timeslots { display: grid; grid-template-columns: repeat(3, 1fr); gap: 12px; margin: 16px 0; }
            .timeslots button { padding: 10px 0; border: 1px solid #0f1944; border-radius: 8px; background: #fff; font-size: 14px; cursor: pointer; }
            .timeslots button.available { color: #0f1944; }
            .timeslots button.selected { background: #0f1944; color: #fff; }

            /* Legend */
            .legend { display: flex; flex-direction: column; gap: 8px; margin-bottom: 16px; }
            .legend-item { display: flex; align-items: center; font-size: 12px; }
            .legend-item .dot { width: 8px; height: 8px; border-radius: 50%; display: inline-block; margin-right: 6px; }
            .legend-item .available-dot { background: #0f1944; }
            .legend-item .no-slots-dot { background: #000; }

            /* Continue button */
            .btn { width: 100%; padding: 14px 0; background: #0f1944; color: #fff; border: none; border-radius: 8px; font-size: 16px; cursor: pointer; margin-bottom: 48px; }

            /* Navbar */
            .navbar { position: absolute; bottom: 0; left: 0; width: 100%; background: #fff; border-top: 1px solid #e5e7eb; display: flex; justify-content: space-around; padding: 8px 0; }
            .navbar .item { display: flex; flex-direction: column; align-items: center; font-size: 12px; color: #0f1944; }
            .navbar .item svg { width: 24px; height: 24px; margin-bottom: 4px; }
        </style>


          <div class="hero" id="hero">
    <div class="hero__header">
      <div class="hero__logo"></div>
      <div class="hero__title">Базис Моторс</div>
    </div>
    <div class="hero__main-title">Выберите дату и время</div>
  </div>

  <main style="min-height: 100%;">      
                

               
                  <!-- Calendar -->
                <div class="calendar">
                    <div class="month">
                        <button class="prev">‹</button>
                        <div class="month-label">
                            <span class="month-name" id="monthName"></span>
                            <span class="year-name" id="yearName"></span>
                        </div>
                        <button class="next">›</button>
                    </div>
                    <div class="weekdays">
                        <div>Пн</div><div>Вт</div><div>Ср</div><div>Чт</div><div>Пт</div><div>Сб</div><div>Вс</div>
                    </div>
                    <div class="days" id="daysContainer"></div>
                </div>

                <!-- Time slots -->
                <div class="timeslots" id="timeslotsContainer">
                    <!-- Временные слоты появятся здесь -->
                </div>

                <!-- Legend -->
                <div class="legend">
                    <div class="legend-item"><span class="dot available-dot"></span>Есть время для записи</div>
                    <div class="legend-item"><span class="dot no-slots-dot"></span>Нет времени для записи</div>
                </div>

                <button class="btn" id="toPage4" disabled>Продолжить</button>

</main>



        <script>
            const monthNames = ["Январь","Февраль","Март","Апрель","Май","Июнь","Июль","Август","Сентябрь","Октябрь","Ноябрь","Декабрь"];
            const today = new Date();
            let currentMonth = today.getMonth();
            let currentYear = today.getFullYear();

            let selectedDate = null;
            let selectedTime = null;

            const daysContainer      = document.getElementById('daysContainer');
            const timeslotsContainer = document.getElementById('timeslotsContainer');
            const monthNameEl        = document.getElementById('monthName');
            const yearNameEl         = document.getElementById('yearName');
            const continueBtn        = document.querySelector('.btn');

            // Объект с доступными слотами по дате (формат YYYY-MM-DD)



             // === КОНСТАНТЫ ===

 // Сколько дней вперёд генерировать

 const DAYS_AHEAD = 30;

 

 // Полный набор слотов на каждый день

 const FULL_SLOTS = [

   "10:00","11:30","12:30","14:00","15:00",

   "16:00","17:00","18:00","19:00"

 ];

 

 // === ГЕНЕРАТОР ===

 function generateSlotsByDate(daysCount) {

   const result = {};

   const today = new Date();

 

   for (let i = 0; i < daysCount; i++) {

     // создаём дату Сегодня + i дней, без наследования времени

     const d = new Date(today.getFullYear(), today.getMonth(), today.getDate() + i);

 

     // форматируем ключ YYYY-MM-DD

     const key = d.toISOString().slice(0, 10);

 

     // клонируем массив, чтобы потом можно было править слоты по конкретной дате

     result[key] = FULL_SLOTS.slice();

   }

 

   return result;

 }

 

 // === ИСПОЛЬЗОВАНИЕ ===

 // В переменной slotsByDate появится объект вида:

 // {

 //   "2025-07-07": ["10:00","11:30",...,"19:00"],

 //   "2025-07-08": ["10:00","11:30",...,"19:00"],

 //    …

 // }

 const slotsByDate = generateSlotsByDate(DAYS_AHEAD);










            function formatDateISO(year, month, day) {
                const mm = String(month + 1).padStart(2, '0');
                const dd = String(day).padStart(2, '0');
                return `${year}-${mm}-${dd}`;
            }

            function renderTimeslots(dateKey) {
                timeslotsContainer.innerHTML = '';
                const times = slotsByDate[dateKey] || [];
                if (times.length === 0) {
                    timeslotsContainer.innerHTML = '<p>Нет доступных слотов на выбранную дату.</p>';
                    return;
                }
                times.forEach(time => {
                    const btn = document.createElement('button');
                    btn.textContent = time;
                    btn.classList.add('available');
                    btn.addEventListener('click', () => {
                        timeslotsContainer.querySelectorAll('button').forEach(el => el.classList.remove('selected'));
                        btn.classList.add('selected');
                        selectedTime = time;  // сохраняем время
                    });
                    timeslotsContainer.appendChild(btn);
                });
            }

            function renderCalendar(month, year) {
                monthNameEl.textContent = monthNames[month];
                yearNameEl.textContent = year;
                daysContainer.innerHTML = '';

                const firstDay = new Date(year, month, 1).getDay();
                const blanks = (firstDay + 6) % 7; // сдвиг, чтобы Пн=0
                for (let i = 0; i < blanks; i++) {
                    const div = document.createElement('div');
                    div.classList.add('blank');
                    daysContainer.appendChild(div);
                }

                const daysInMonth = new Date(year, month + 1, 0).getDate();
                for (let d = 1; d <= daysInMonth; d++) {
                    const date = new Date(year, month, d);
                    const iso = formatDateISO(year, month, d);
                    const dayDiv = document.createElement('div');
                    dayDiv.textContent = d;

                    if (date < new Date(today.getFullYear(), today.getMonth(), today.getDate())) {
                        dayDiv.classList.add('past');
                    } else if (slotsByDate[iso]?.length > 0) {
                        dayDiv.classList.add('available');
                        dayDiv.addEventListener('click', () => {
                            daysContainer.querySelectorAll('div').forEach(el => el.classList.remove('selected'));
                            dayDiv.classList.add('selected');
                            selectedDate = iso;           // сохраняем дату
                            selectedTime = null;          // сбрасываем время
                            renderTimeslots(iso);
                            document.getElementById('toPage4').disabled = false;
                        });
                    } else {
                        dayDiv.classList.add('no-slots');
                    }

                    daysContainer.appendChild(dayDiv);
                }
            }

            document.querySelector('.prev').addEventListener('click', () => {
                currentMonth = (currentMonth === 0 ? 11 : currentMonth - 1);
                if (currentMonth === 11) currentYear--;
                renderCalendar(currentMonth, currentYear);
                timeslotsContainer.innerHTML = '';
                selectedDate = selectedTime = null;
            });
            document.querySelector('.next').addEventListener('click', () => {
                currentMonth = (currentMonth === 11 ? 0 : currentMonth + 1);
                if (currentMonth === 0) currentYear++;
                renderCalendar(currentMonth, currentYear);
                timeslotsContainer.innerHTML = '';
                selectedDate = selectedTime = null;
            });

            continueBtn.addEventListener('click', () => {
                if (!selectedDate || !selectedTime) {
                    alert('Пожалуйста, выберите дату и время.');
                    return;
                }
                document.getElementById('toPage4').disabled = false;
                // Здесь можно отправить selectedDate и selectedTime на сервер
                console.log('Запись на', selectedDate, selectedTime);
                // Например:
                // fetch('/api/book', { method: 'POST', body: JSON.stringify({ date: selectedDate, time: selectedTime }) })
            });



            // Инициализация
            renderCalendar(currentMonth, currentYear);
        </script>



     
    </div>


    <!-- Детали записи -->
    <div id="page4" class="page">

       
                <div id="details"></div>

        
    </div>


    <script>
    

        // Выбранные значения
        let selectedServiceAddress = ''; // Адрес сервиса
        let selectedServiceType = '';   // Тип услуги
        
    

        // Навигация между страницами
        function showPage(pageId) {
          window.scrollTo(0, 0);
            document.querySelectorAll('.page').forEach(page => page.classList.remove('active'));
            document.getElementById(pageId).classList.add('active');
        }

        // Выбор сервиса
        document.querySelectorAll('#page1 .service-card').forEach(card => {
            card.addEventListener('click', () => {
                document.querySelectorAll('#page1 .service-card').forEach(c => c.classList.remove('selected'));
                card.classList.add('selected');
                selectedServiceAddress = card.dataset.service;
                document.getElementById('toPage1-5').disabled = false;
            });
        });

        // Переход к выбору услуги
        document.getElementById('toPage1-5').addEventListener('click', () => {
            showPage('page1-5');
        });

        // Выбор услуги
        document.querySelectorAll('#page1-5 .service-card').forEach(card => {
            card.addEventListener('click', () => {
                document.querySelectorAll('#page1-5 .service-card').forEach(c => c.classList.remove('selected'));
                card.classList.add('selected');
                selectedServiceType = card.dataset.service;
                document.getElementById('toPage2').disabled = false;
            });
        });

        // Переход к выбору автомобиля
        document.getElementById('toPage2').addEventListener('click', () => {
            showPage('page2');
        });




/*
Новая версия выбора авто, старые надо снести
*/
         // Выбор сервиса

         selectedCar = '';
         selectedCarId = 0;

        document.querySelectorAll('#page2 .car-card').forEach(card => {
            card.addEventListener('click', () => {
                document.querySelectorAll('#page2 .car-card').forEach(c => c.classList.remove('selected'));
                card.classList.add('selected');
                selectedCar = card.dataset.service;
                selectedCarId = card.dataset.itemid;
                document.getElementById('toPage3').disabled = false;
            });
        });

        // Переход к выбору услуги
        document.getElementById('toPage3').addEventListener('click', () => {
            showPage('page3');
        });




// функция для дополняющего нулями
function pad(n){ return n < 10 ? '0' + n : n; }
 
document.addEventListener('DOMContentLoaded', function(){
 var d = new Date();
 
 // формат ISO без миллисекунд и без Z, т.е. yyyy-MM-ddTHH:mm:ss
 var formatted =
     d.getFullYear() + '-' +
     pad(d.getMonth() + 1) + '-' +
     pad(d.getDate()) + 'T' +
     pad(d.getHours()) + ':' +
     pad(d.getMinutes()) + ':' +
     pad(d.getSeconds());
 
 // подставляем в скрытое поле
 document.getElementById('CreatedAt').value = formatted;
});



        // Переход к деталям записи
        document.getElementById('toPage4').addEventListener('click', () => {
            showPage('page4');
            document.getElementById('details').innerHTML = `

    <style>
         .hero__header { display: flex; align-items: center; gap: var(--gap-md); }
    .hero__logo {
      width: 32px; height: 32px;
      background: linear-gradient(90deg, var(--clr-primary-start), var(--clr-primary-end));
      border-radius: var(--r-sm);
    }
    .hero__title { font-size: 18px; font-weight: 500; }
    .hero__main-title {
      margin-top: var(--gap-lg); font-size: 28px; font-weight: 700;
    }
    .content {
      background: var(--clr-bg-light);
      color: var(--clr-text-dark);
      border-top-left-radius: var(--r-lg);
      border-top-right-radius: var(--r-lg);
      margin-top: -var(--gap-sm);
      padding: var(--gap-lg) var(--gap-md) calc(var(--gap-lg) + env(safe-area-inset-bottom));
    }
    .section {
      margin-bottom: var(--gap-lg);
    }
    .section-title {
      font-size: 18px;
      font-weight: 600;
      margin-bottom: var(--gap-sm);
    }
    .info-block {
      display: flex;
      flex-direction: column;
      gap: var(--gap-sm);
      background: var(--clr-bg-light);
      border-radius: var(--r-sm);
      padding: var(--gap-md);
      box-shadow: 0 2px 6px rgba(0,0,0,0.05);
    }
    .info-row {
      display: flex;
      justify-content: space-between;
      font-size: 16px;
    }
    .info-label {
      color: var(--clr-text-gray);
    }
    .info-value {
      font-weight: 600;
    }
    .form-section input, .form-section textarea {
      width: 100%;
      padding: 12px;
      border: 1px solid #ccc;
      border-radius: var(--r-sm);
      font-size: 16px;
      margin-bottom: var(--gap-md);
    }
    .form-section textarea {
      resize: vertical;
      min-height: 80px;
    }
    .btn-submit {
      width: 100%;
      padding: 14px;
      font-size: 16px;
      font-weight: 600;
      background: linear-gradient(to right, var(--clr-primary-start), var(--clr-primary-end));
      color: white;
      border: none;
      border-radius: var(--r-sm);
      cursor: pointer;
    }
    </style>

     <header class="hero">
    <div class="hero__header">
      <div class="hero__logo"></div>
      <div class="hero__title">Базис Моторс</div>
    </div>
    <div class="hero__main-title">Подтверждение записи</div>
  </header>

  <main class="content" style="min-height: 650px;">


<form asp-controller="Orders" asp-action="Create" method="post">
   @Html.AntiForgeryToken()

  <input 
    type="hidden" 
    name="UserId" 
    id="UserId" 
    value="@ViewData["UserId"]" />

     <input 
    type="hidden" 
    name="CarId" 
    id="CarId" 
    value="${selectedCarId}" />


  <input 
    type="hidden" 
    name="CreatedAt" 
    id="CreatedAt" 
    value="@ViewData["CreatedAt"]" />

    <input type="hidden"  
    name="Usluga" 
      id="Usluga" 
      class="form-control"
        value="${selectedServiceType}">

         <input type="hidden" 
         name="ServiceAddress" 
         id="ServiceAddress" 
          class="form-input"  
          value="${selectedServiceAddress}">

          <input type="hidden" name="Auto" class="form-input" value="${selectedCar}">


  <input type="hidden" name="Status" class="form-input"  value="0">

    <section class="section">
      <div class="section-title">Запись</div>
      <div class="info-block">
        <div class="info-row"><div class="info-label">Дата и время</div><div class="info-value">${selectedDate} - ${selectedTime}</div></div>
        <div class="info-row"><div class="info-label">Сервис</div><div class="info-value">${selectedServiceAddress}</div></div>
        <div class="info-row"><div class="info-label">Услуга</div><div class="info-value">${selectedServiceType}</div></div>
        <div class="info-row"><div class="info-label">Авто</div><div class="info-value">${selectedCar}</div></div>
      </div>
    </section>

    <section class="section form-section">
      <div class="section-title">Ваши данные</div>
      <input name="Name" type="text" placeholder="Имя *" />
      <input name="Phone"  type="tel" placeholder="Телефон *" />
      <textarea name="Comment" placeholder="Комментарий (необязательно)"></textarea>
    </section>

    <button class="btn-submit" value="Create" type="submit">Записаться</button>
        </form>
  </main>


        `;
        });

        // Подтверждение записи
        document.getElementById('confirm').addEventListener('click', () => {
            alert(`Запись успешно оформлена! Сервис: ${selectedServiceAddress}, Услуга: ${selectedServiceType}, Дата: ${selectedDate}, Время: ${selectedTime}`);
        });
    </script>



@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

